// #@サンプルプログラム
//※コメント行、改行、スペース、TABは省略される為、処理速度への影響はありません
//※このサンプルでの変数ルール：a〜zの0番変数は作業用としてどこでも使えるようにしておく
g1=960 g2=540	// 画面サイズを変数に設定
//g1=640 g2=480	// 画面サイズを変数に設定
GSg1,g2;		// 画面サイズ変更

SM0;			// BGM0番を再生
S0;				// SE0

// 速度ウエイト：ウエイト0でも約60fpsのタイミングで表示される
GW33;		// wait=??ms

// キャラ描画関数
//IN: @ポインタにキャラ構造体の先頭を入れておくこと
#0{
	x=@ y=@(1					// 座標を取得
	a=CC@(2/2*3+@(3/3;			// 方向とアニメーション値を元に、画像番号の計算：CC拡張関数で計算
//	a=@(2 a/2 a*3 b=@(3 b/3 a+b		// 方向とアニメーション値を元に、画像番号の計算：↑と同じ処理
	@>3 @+1 b=@ b>8 b[@=0]		// アニメーションカウント処理
	a+@(1						// 画像の開始位置を足す
	Ga,x,y;						// 描画
}

// x,yを画面の範囲内に収める
#1{
	a=@ a<0 a[@=0]
	a=@ a+24 a>g1 a[@=g1 @-24]
	@>1
	a=@ a<0 a[@=0]
	a=@ a+32 a>g2 a[@=g2 @-32]
}

// 方向を踏まえて移動させる：x,y,hを使用
#2{
	a=CC(h+1)%8<3; a[y-8]		// UP
//	a=h a+1 a%8 a<3 a[y-8]		// UP：↑と同じ処理
	[a=h a-3 a%8 a<3 a[y+8]]	// DOWN
	a=h a-1 a%8 a<3 a[x+8]		// RIGHT
	[a=h a-5 a%8 a<3 a[x-8]]	// LEFT
}

// ランダム移動処理
#3{
	// 今回は動かない？
	a=CR; a%100 a<40 a[.]

	// ランダム移動
	x=@ y=@(1
	a=CR; a%100 a<20
	a[
		h=CR; h%8	// ランダム方向
		#2			// 方向を踏まえて移動
		@=x @(1=y @(2=h	// SET
	][
		h=@(2
		#2			// 方向を踏まえて移動
		@=x @(1=y	// SET
	]
	#1		// 画面の範囲内に収める
}

// キャラデータの初期値設定用
//IN : @=先頭位置、a=画像番号
#4{
	@=CR; @%g1		// キャラX座標（ランダム位置を設定）
	@(1=CR; @(1%g2	// キャラY座標（ランダム位置を設定）
	@(2=CR; @(2%8 	// 方向（0=上、1=右上、・・・6=左、7=左上）
	@(3=0 			// アニメーション（(0-8)/3）
	@(4=a			// 絵の開始位置
}

// キャラの初期座標と、方向とアニメーションカウントを設定
// （1キャラ分を、構造体のように連続で変数5個使用）
@:c1 a=24 #4	// PLキャラ

// 敵キャラを作成
m1=100		// 総敵数（増やし過ぎると d変数まで行ってしまうので注意）
@:c6 a=36	// 敵データ開始位置
i=m1 [i-1
	#4		// 敵を作成
	@>5 a+12	// NEXT
	b=a b>60 b[a=36]	// 絵の番号は36〜60まで
i]

// 主なキーを押して離すまで待機
#5{
	S0;	// SE
	// 主なキーを離すまで待機
	[GF; k=0 k+KSp; k+KEn; k+KEs; k+KML; k+KMR; k];

	// 何か押すまで待機
	[
		GF;	// FLIP
		k=0 k+KSp; k+KEn; k+KEs; k+KML; k+KMR;
		k=CCk==0;	// 0なら1にする
	k];

	S1;	// SE
	// 主なキーを離すまで待機
	[GF; k=0 k+KSp; k+KEn; k+KEs; k+KML; k+KMR; k]
}

// メッセージウインドウを表示
//IN : a=文字列番号, x,y=表示位置
#6{
	G10,x,y;	// ウインドウ描画
	x+20 y+16
	b=CCa==0; b[GTx,y,"ABCDEFG!";]
	b=CCa==1; b[GTx,y,"HI JKLMN.";]
	b=CCa==2; b[GTx,y,"OPQR-STU-VWXYZ!!";]
	b=CCa==3; b[GTx,y,"0123456789!";]
	#5			// 主なキーを押して離すまで待機
}


//-----------------------------------
// LOOP
i=1
[
//	GC;					// 画面クリア（高速）
	GA10; GC; GA100;	// 残像処理（処理速度が低下する）

	// キー判定
	f=0
	k=KLF; k[c1-8 c3=6 f=1]	// LEFT
	k=KRT; k[c1+8 c3=2 f=1]	// RIGHT
	k=KUP; k[c2-8 c3=0 f=1]	// UP
	k=KDW; k[c2+8 c3=4 f=1]	// DOWN
	// 動いていたら効果音（3歩に1回）
	f[
		f=c4 f%2 f[S54;]	// 効果音
		@:c1 #1		// 画面の範囲内に収める
	][
		a=KML; a[
			// マウスで移動
			x2=KMX; y2=KMY; x2-12 y2-16
			c3=CLc1,c2,x2,y2,8;	// 進む位置をx,yに設定し、戻り値の方向も設定
			c1=x; c2=y;
			@:c1 #1	// 範囲内に収める
		]
	]

	// 全敵をランダム移動
	n=6 i=m1 i[i-1
		@:c(n #3
		n+5
	i]

	// 敵と当たり判定を行い、当たっていたら効果音を鳴らす
	x=c1 y=c2 x+12 y+16	// PL座標の中心
	@:c6				// 敵の開始位置
	n=m1 n[n-1			// 敵数でループ
		a=CHx,y,@,@(1,24,32;	// 当たり判定
		@>5				// 次の敵へ
		a[S4; n=0]		// 効果音を鳴らしループ終了
	n]

	// 背景描画（横１列のみ）
	x=g1 [x-16 G2,x,0; x]
	G0,0,16;				// #@ ICON
	x=g1 [x-16 G2,x,68; x]	// 顔の下側にも表示

	// 中央付近に背景を描画
	y=160 [y+16
		x=213 [x+16 G1; a=x a<500 a]
	a=y a<320 a]

	// @を設定し、関数で全キャラを描画
	i=1 l=1 l+m1 [
		@:c(i #0
		i+5
	l-1 l]


	// 図形描画
	GA70;
	r=100 g=200 b=150 x=80 y=120 GP;
	x+1 y+1 x1=100 y1=50 GB;
	x+x1 y+y1 GP;
	GA100;

	// 文字
	GT60,18,"Game speed up : Shift";
	GT60,34,"Game end : Esc or Right click";
	GT60,50,"Window message : Space";

	// スペースキーでメッセージ表示
	k=KSp; k[a=CR; a%4 x=100 y=338 #6]

	// マウスカーソル
	x=KMX; y=KMY; G116;

	// 終了キー（Esc or 右クリック）判定
	k=KEs; k[i=0][k=KMR; k[i=0]]

	// 実際の画面に表示（FLIP）
	GF;
i]	// iが0以外ならループ
